{"version":3,"sources":["webpack://randomUser/./src/index.js"],"names":["words","refs","loadMore","document","querySelector","usersContainer","user","spiner","statistic","makeUserCard","picture","name","gender","phone","email","location","dob","registered","dateBirthday","Date","date","dateRegistered","replacedUser","innerHTML","replaceAll","large","replace","last","first","state","city","street","getDate","getMonth","getFullYear","insertAdjacentHTML","makeNationalityMarkUp","key","value","declensionUser","number","declensionAmount","addEventListener","e","randomUsers","url","classList","remove","Math","floor","random","fetch","then","response","json","results","users","map","add","replaceMurkup","female","filter","male","dominantGender","stats","flatMap","nat","reduce","acc","nationality","replacesStatistics","length","Object","entries","join","createNationalityList","getStatistics"],"mappings":"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","file":"bundle.js","sourcesContent":["import \"./scss/index.scss\";\r\n\r\nconst BASE_URL = \"https://randomuser.me/api/\";\r\nconst words = ['пользователь', 'пользователя', 'пользователей'];\r\n\r\nconst refs = {\r\n  loadMore: document.querySelector(\"[data-load-more]\"),\r\n  usersContainer: document.querySelector(\"[data-users-container]\"),\r\n  user: document.querySelector(\"#user-template\"),\r\n  spiner: document.querySelector(\"[data-load-spiner]\"),\r\n  statistic: document.querySelector(\"#statistics\"),\r\n};\r\n\r\nfunction getRandomUser(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nrefs.loadMore.addEventListener(\"click\", onLoad);\r\n\r\nfunction onLoad(e) {\r\n  refs.spiner.classList.remove(\"is-hidden\");\r\n  clearCardesContainer();\r\n  fetchUsers();\r\n}\r\n\r\nfunction getUsers(randomUsers) {\r\n  const url = `${BASE_URL}?results=${randomUsers}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then(({ results }) => {\r\n      return results;\r\n    });\r\n}\r\n\r\nfunction fetchUsers() {\r\n  getUsers(getRandomUser(101)).then((users) => {\r\n    replaceMurkup(users);\r\n    getStatistics(users);\r\n  });\r\n}\r\n\r\nfunction replaceMurkup(users) {\r\n  users.map(makeUserCard);\r\n  refs.spiner.classList.add(\"is-hidden\");\r\n}\r\n\r\nfunction makeUserCard({\r\n  picture,\r\n  name,\r\n  gender,\r\n  phone,\r\n  email,\r\n  location,\r\n  dob,\r\n  registered,\r\n}) {\r\n  const dateBirthday = new Date(dob.date);\r\n  const dateRegistered = new Date(registered.date);\r\n\r\n  const replacedUser = refs.user.innerHTML\r\n    .replaceAll(/{{hrefImg}}/gi, picture.large)\r\n    .replace(/{{lastName}}/, name.last)\r\n    .replace(/{{firstName}}/, name.first)\r\n    .replace(/{{gender}}/, gender)\r\n    .replaceAll(/{{phone}}/gi, phone)\r\n    .replaceAll(/{{email}}/gi, email)\r\n    .replace(/{{state}}/, location.state)\r\n    .replace(/{{city}}/, location.city)\r\n    .replace(/{{street}}/, location.street.name)\r\n    .replace(\r\n      /{{birthday}}/,\r\n      `${dateBirthday.getDate()}/${dateBirthday.getMonth()}/${dateBirthday.getFullYear()}`\r\n    )\r\n    .replace(\r\n      /{{registered}}/,\r\n      `${dateRegistered.getDate()}/${dateRegistered.getMonth()}/${dateRegistered.getFullYear()}`\r\n    );\r\n  refs.usersContainer.insertAdjacentHTML(\"afterbegin\", replacedUser);\r\n}\r\n\r\nfunction getStatistics(users) {\r\n  const female = users.filter((user) => user.gender === \"female\");\r\n  const male = users.filter((user) => user.gender === \"male\");\r\n  const dominantGender =\r\n    female > male ? \"female\" : female < male ? \"male\" : \"equal amount\";\r\n\r\n  const stats = users\r\n    .flatMap((user) => user.nat)\r\n    .reduce(\r\n      (acc, nationality) => ({\r\n        ...acc,\r\n        [nationality]: acc[nationality] ? acc[nationality] + 1 : 1,\r\n      }),\r\n      {}\r\n    );\r\n\r\n  const replacesStatistics = refs.statistic.innerHTML\r\n    .replace(/{{users}}/, users.length)\r\n    .replace(/{{female}}/, female.length)\r\n    .replace(/{{male}}/, male.length)\r\n    .replace(/{{dominantGender}}/, dominantGender)\r\n    .replace(/{{nationality}}/, createNationalityList(stats));\r\n  refs.usersContainer.insertAdjacentHTML(\"beforeend\", replacesStatistics);\r\n}\r\n\r\nfunction createNationalityList(stats) {\r\n  return Object.entries(stats).map(makeNationalityMarkUp).join(\"\");\r\n}\r\n\r\nfunction makeNationalityMarkUp([key, value]) {\r\n  const declensionUser = declensionAmount(value, words);\r\n\r\n  return `<div>${key}: ${value} ${declensionUser}</div>`;\r\n}\r\n\r\nfunction declensionAmount(number, words) {\r\n  return words[\r\n    number % 100 > 4 && number % 100 < 20\r\n      ? 2\r\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\r\n  ];\r\n}\r\n\r\nfunction clearCardesContainer() {\r\n  refs.usersContainer.innerHTML = \"\";\r\n}"],"sourceRoot":""}
{"version":3,"sources":["webpack://randomUser/./src/index.js"],"names":["refs","loadMore","document","querySelector","usersContainer","user","spiner","makeUserCard","picture","name","gender","phone","email","location","dob","registered","dateBirthday","Date","date","dateRegistered","replacedUser","innerHTML","replace","large","last","first","replaceAll","state","city","street","getDate","getMonth","getFullYear","insertAdjacentHTML","addEventListener","e","randomUsers","url","classList","remove","Math","floor","random","fetch","then","response","json","results","users","map","add","replaceMurkup"],"mappings":"yBAEA,IAEMA,EAAO,CACXC,SAAUC,SAASC,cAAc,oBACjCC,eAAgBF,SAASC,cAAc,0BACvCE,KAAMH,SAASC,cAAc,kBAC7BG,OAAQJ,SAASC,cAAc,uBAoCjC,SAASI,EAAT,GASG,IARDC,EAQC,EARDA,QACAC,EAOC,EAPDA,KACAC,EAMC,EANDA,OACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,IACAC,EACC,EADDA,WAEMC,EAAe,IAAIC,KAAKH,EAAII,MAC5BC,EAAiB,IAAIF,KAAKF,EAAWG,MAErCE,EAAepB,EAAKK,KAAKgB,UAC5BC,QAAQ,gBAAiBd,EAAQe,OACjCD,QAAQ,eAAgBb,EAAKe,MAC7BF,QAAQ,gBAAiBb,EAAKgB,OAC9BH,QAAQ,aAAcZ,GACtBY,QAAQ,cAAeX,GACvBe,WAAW,cAAed,GAC1BU,QAAQ,YAAaT,EAASc,OAC9BL,QAAQ,WAAYT,EAASe,MAC7BN,QAAQ,aAAcT,EAASgB,OAAOpB,MACtCa,QACC,eAXiB,UAYdN,EAAac,UAZC,YAYYd,EAAae,WAZzB,YAYuCf,EAAagB,gBAEtEV,QAAQ,iBAdU,UAcWH,EAAeW,UAd1B,YAcuCX,EAAeY,WAdtD,YAcoEZ,EAAea,gBAExGhC,EAAKI,eAAe6B,mBAAmB,YAAab,GA1DtDpB,EAAKC,SAASiC,iBAAiB,SAE/B,SAAgBC,GAgBhB,IAVkBC,EACVC,EANNrC,EAAKM,OAAOgC,UAAUC,OAAO,aA2D7BvC,EAAKI,eAAeiB,UAAY,IA3CT,IAXPe,EAXTI,KAAKC,MAsBW,IAtBLD,KAAKE,UAYjBL,EAAM,GAAH,OAtBM,6BAsBN,oBAA0BD,GAE5BO,MAAMN,GACVO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YACJ,OADqB,EAAdG,YAMkBH,MAAK,SAACI,IAKrC,SAAuBA,GACrBA,EAAMC,IAAI1C,GACVP,EAAKM,OAAOgC,UAAUY,IAAI,aANxBC,CAAcH,S","file":"bundle.js","sourcesContent":["import \"./scss/index.scss\";\r\n\r\nconst BASE_URL = \"https://randomuser.me/api/\";\r\n\r\nconst refs = {\r\n  loadMore: document.querySelector(\"[data-load-more]\"),\r\n  usersContainer: document.querySelector(\"[data-users-container]\"),\r\n  user: document.querySelector(\"#user-template\"),\r\n  spiner: document.querySelector(\"[data-load-spiner]\"),\r\n};\r\n\r\nfunction getRandomUser(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nrefs.loadMore.addEventListener(\"click\", onLoad);\r\n\r\nfunction onLoad(e) {\r\n  refs.spiner.classList.remove(\"is-hidden\");\r\n  clearCardesContainer();\r\n  fetchUsers();\r\n}\r\n\r\nfunction getUsers(randomUsers) {\r\n  const url = `${BASE_URL}?results=${randomUsers}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then(({ results }) => {\r\n      return results;\r\n    });\r\n}\r\n\r\nfunction fetchUsers() {\r\n  getUsers(getRandomUser(101)).then((users) => {\r\n    replaceMurkup(users);\r\n  });\r\n}\r\n\r\nfunction replaceMurkup(users) {\r\n  users.map(makeUserCard);\r\n  refs.spiner.classList.add(\"is-hidden\");\r\n}\r\n\r\nfunction makeUserCard({\r\n  picture,\r\n  name,\r\n  gender,\r\n  phone,\r\n  email,\r\n  location,\r\n  dob,\r\n  registered,\r\n}) {\r\n  const dateBirthday = new Date(dob.date);\r\n  const dateRegistered = new Date(registered.date);\r\n\r\n  const replacedUser = refs.user.innerHTML\r\n    .replace(/{{hrefImg}}/gi, picture.large)\r\n    .replace(/{{lastName}}/, name.last)\r\n    .replace(/{{firstName}}/, name.first)\r\n    .replace(/{{gender}}/, gender)\r\n    .replace(/{{phone}}/gi, phone)\r\n    .replaceAll(/{{email}}/gi, email)\r\n    .replace(/{{state}}/, location.state)\r\n    .replace(/{{city}}/, location.city)\r\n    .replace(/{{street}}/, location.street.name)\r\n    .replace(\r\n      /{{birthday}}/,\r\n      `${dateBirthday.getDate()}/${dateBirthday.getMonth()}/${dateBirthday.getFullYear()}`\r\n    )\r\n    .replace(/{{registered}}/, `${dateRegistered.getDate()}/${dateRegistered.getMonth()}/${dateRegistered.getFullYear()}`);\r\n\r\n  refs.usersContainer.insertAdjacentHTML(\"beforeend\", replacedUser);\r\n}\r\n\r\nfunction clearCardesContainer() {\r\n  refs.usersContainer.innerHTML = \"\";\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://randomUser/./src/index.js"],"names":["words","refs","loadMore","document","querySelector","usersContainer","user","spiner","statistic","makeUserCard","picture","name","gender","phone","email","location","dob","registered","dateBirthday","Date","date","dateBirthdayContent","validDate","getUTCDate","getUTCMonth","getUTCFullYear","dateRegistered","dateRegisteredContent","replacedUser","innerHTML","replaceAll","large","replace","last","first","state","city","street","insertAdjacentHTML","value","String","padStart","makeNationalityMarkUp","key","declensionUser","number","declensionAmount","addEventListener","e","randomUsers","url","classList","remove","Math","floor","random","fetch","then","response","json","results","users","map","add","replaceMurkup","female","filter","male","dominantGender","stats","flatMap","nat","reduce","acc","nationality","replacesStatistics","length","Object","entries","join","createNationalityList","getStatistics"],"mappings":"0zBAEA,IACMA,EAAQ,CAAC,eAAgB,eAAgB,iBAEzCC,EAAO,CACXC,SAAUC,SAASC,cAAc,oBACjCC,eAAgBF,SAASC,cAAc,0BACvCE,KAAMH,SAASC,cAAc,kBAC7BG,OAAQJ,SAASC,cAAc,sBAC/BI,UAAWL,SAASC,cAAc,gBAqCpC,SAASK,EAAT,GASG,IARDC,EAQC,EARDA,QACAC,EAOC,EAPDA,KACAC,EAMC,EANDA,OACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,IACAC,EACC,EADDA,WAEMC,EAAe,IAAIC,KAAKH,EAAII,MAC5BC,EAAsB,GAAH,OAAMC,EAC7BJ,EAAaK,cADU,YAEpBD,EACHJ,EAAaM,cAAgB,GAHN,YAIpBN,EAAaO,kBAEZC,EAAiB,IAAIP,KAAKF,EAAWG,MACrCO,EAAwB,GAAH,OAAML,EAC/BI,EAAeH,cADU,YAEtBD,EACHI,EAAeF,cAAgB,GAHN,YAItBE,EAAeD,kBAEdG,EAAe3B,EAAKK,KAAKuB,UAC5BC,WAAW,gBAAiBpB,EAAQqB,OACpCC,QAAQ,eAAgBrB,EAAKsB,MAC7BD,QAAQ,gBAAiBrB,EAAKuB,OAC9BF,QAAQ,aAAcpB,GACtBkB,WAAW,cAAejB,GAC1BiB,WAAW,cAAehB,GAC1BkB,QAAQ,YAAajB,EAASoB,OAC9BH,QAAQ,WAAYjB,EAASqB,MAC7BJ,QAAQ,aAAcjB,EAASsB,OAAO1B,MACtCqB,QAAQ,eAAgBX,GACxBW,QAAQ,iBAAkBL,GAC7B1B,EAAKI,eAAeiC,mBAAmB,aAAcV,GAGvD,SAASN,EAAUiB,GACjB,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KAgCnC,SAASC,EAAT,GAA6C,I,IAAA,G,EAAA,E,4CAAA,I,wwBAAbC,EAAa,KAARJ,EAAQ,KACrCK,EAKR,SAA0BC,EAAQ7C,GAChC,OAAOA,EACL6C,EAAS,IAAM,GAAKA,EAAS,IAAM,GAC/B,EACA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGA,EAAS,GAAK,EAAIA,EAAS,GAAK,IATlCC,CAAiBP,EAAOvC,GAE/C,qBAAe2C,EAAf,aAAuBJ,EAAvB,YAAgCK,EAAhC,UAzGF3C,EAAKC,SAAS6C,iBAAiB,SAE/B,SAAgBC,GAgBhB,IAVkBC,EACVC,EANNjD,EAAKM,OAAO4C,UAAUC,OAAO,aAkH7BnD,EAAKI,eAAewB,UAAY,IAlGT,IAXPoB,EAXTI,KAAKC,MAsBW,IAtBLD,KAAKE,UAYjBL,EAAM,GAAH,OAxBM,6BAwBN,oBAA0BD,GAE5BO,MAAMN,GACVO,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YACJ,OADqB,EAAdG,YAMkBH,MAAK,SAACI,IAMrC,SAAuBA,GACrBA,EAAMC,IAAIrD,GACVR,EAAKM,OAAO4C,UAAUY,IAAI,aAPxBC,CAAcH,GAqDlB,SAAuBA,GACrB,IAAMI,EAASJ,EAAMK,QAAO,SAAC5D,GAAD,MAA0B,WAAhBA,EAAKM,UACrCuD,EAAON,EAAMK,QAAO,SAAC5D,GAAD,MAA0B,SAAhBA,EAAKM,UACnCwD,EACJH,EAASE,EAAO,SAAWF,EAASE,EAAO,SAAW,oBAElDE,EAAQR,EACXS,SAAQ,SAAChE,GAAD,OAAUA,EAAKiE,OACvBC,QACC,SAACC,EAAKC,GAAN,cACKD,GADL,QAEGC,EAAcD,EAAIC,GAAeD,EAAIC,GAAe,EAAI,MAE3D,IAGEC,EAAqB1E,EAAKO,UAAUqB,UACvCG,QAAQ,YAAa6B,EAAMe,QAC3B5C,QAAQ,aAAciC,EAAOW,QAC7B5C,QAAQ,WAAYmC,EAAKS,QACzB5C,QAAQ,qBAAsBoC,GAC9BpC,QAAQ,kBAIb,SAA+BqC,GAC7B,OAAOQ,OAAOC,QAAQT,GAAOP,IAAIpB,GAAuBqC,KAAK,IAL/BC,CAAsBX,IACpDpE,EAAKI,eAAeiC,mBAAmB,YAAaqC,GA1ElDM,CAAcpB,S","file":"bundle.js","sourcesContent":["import \"./scss/index.scss\";\r\n\r\nconst BASE_URL = \"https://randomuser.me/api/\";\r\nconst words = [\"пользователь\", \"пользователя\", \"пользователей\"];\r\n\r\nconst refs = {\r\n  loadMore: document.querySelector(\"[data-load-more]\"),\r\n  usersContainer: document.querySelector(\"[data-users-container]\"),\r\n  user: document.querySelector(\"#user-template\"),\r\n  spiner: document.querySelector(\"[data-load-spiner]\"),\r\n  statistic: document.querySelector(\"#statistics\"),\r\n};\r\n\r\nfunction getRandomUser(max) {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nrefs.loadMore.addEventListener(\"click\", onLoad);\r\n\r\nfunction onLoad(e) {\r\n  refs.spiner.classList.remove(\"is-hidden\");\r\n  clearCardesContainer();\r\n  fetchUsers();\r\n}\r\n\r\nfunction getUsers(randomUsers) {\r\n  const url = `${BASE_URL}?results=${randomUsers}`;\r\n\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then(({ results }) => {\r\n      return results;\r\n    });\r\n}\r\n\r\nfunction fetchUsers() {\r\n  getUsers(getRandomUser(101)).then((users) => {\r\n    replaceMurkup(users);\r\n    getStatistics(users);\r\n  });\r\n}\r\n\r\nfunction replaceMurkup(users) {\r\n  users.map(makeUserCard);\r\n  refs.spiner.classList.add(\"is-hidden\");\r\n}\r\n\r\nfunction makeUserCard({\r\n  picture,\r\n  name,\r\n  gender,\r\n  phone,\r\n  email,\r\n  location,\r\n  dob,\r\n  registered,\r\n}) {\r\n  const dateBirthday = new Date(dob.date);\r\n  const dateBirthdayContent = `${validDate(\r\n    dateBirthday.getUTCDate()\r\n  )}-${validDate(\r\n    dateBirthday.getUTCMonth() + 1\r\n  )}-${dateBirthday.getUTCFullYear()}`;\r\n\r\n  const dateRegistered = new Date(registered.date);\r\n  const dateRegisteredContent = `${validDate(\r\n    dateRegistered.getUTCDate()\r\n  )}-${validDate(\r\n    dateRegistered.getUTCMonth() + 1\r\n  )}-${dateRegistered.getUTCFullYear()}`;\r\n\r\n  const replacedUser = refs.user.innerHTML\r\n    .replaceAll(/{{hrefImg}}/gi, picture.large)\r\n    .replace(/{{lastName}}/, name.last)\r\n    .replace(/{{firstName}}/, name.first)\r\n    .replace(/{{gender}}/, gender)\r\n    .replaceAll(/{{phone}}/gi, phone)\r\n    .replaceAll(/{{email}}/gi, email)\r\n    .replace(/{{state}}/, location.state)\r\n    .replace(/{{city}}/, location.city)\r\n    .replace(/{{street}}/, location.street.name)\r\n    .replace(/{{birthday}}/, dateBirthdayContent)\r\n    .replace(/{{registered}}/, dateRegisteredContent);\r\n  refs.usersContainer.insertAdjacentHTML(\"afterbegin\", replacedUser);\r\n}\r\n\r\nfunction validDate(value) {\r\n  return String(value).padStart(2, \"0\");\r\n}\r\n\r\nfunction getStatistics(users) {\r\n  const female = users.filter((user) => user.gender === \"female\");\r\n  const male = users.filter((user) => user.gender === \"male\");\r\n  const dominantGender =\r\n    female > male ? \"женщин\" : female < male ? \"мужчин\" : \"равное количество\";\r\n\r\n  const stats = users\r\n    .flatMap((user) => user.nat)\r\n    .reduce(\r\n      (acc, nationality) => ({\r\n        ...acc,\r\n        [nationality]: acc[nationality] ? acc[nationality] + 1 : 1,\r\n      }),\r\n      {}\r\n    );\r\n\r\n  const replacesStatistics = refs.statistic.innerHTML\r\n    .replace(/{{users}}/, users.length)\r\n    .replace(/{{female}}/, female.length)\r\n    .replace(/{{male}}/, male.length)\r\n    .replace(/{{dominantGender}}/, dominantGender)\r\n    .replace(/{{nationality}}/, createNationalityList(stats));\r\n  refs.usersContainer.insertAdjacentHTML(\"beforeend\", replacesStatistics);\r\n}\r\n\r\nfunction createNationalityList(stats) {\r\n  return Object.entries(stats).map(makeNationalityMarkUp).join(\"\");\r\n}\r\n\r\nfunction makeNationalityMarkUp([key, value]) {\r\n  const declensionUser = declensionAmount(value, words);\r\n\r\n  return `<div>${key}: ${value} ${declensionUser}</div>`;\r\n}\r\n\r\nfunction declensionAmount(number, words) {\r\n  return words[\r\n    number % 100 > 4 && number % 100 < 20\r\n      ? 2\r\n      : [2, 0, 1, 1, 1, 2][number % 10 < 5 ? number % 10 : 5]\r\n  ];\r\n}\r\n\r\nfunction clearCardesContainer() {\r\n  refs.usersContainer.innerHTML = \"\";\r\n}\r\n"],"sourceRoot":""}